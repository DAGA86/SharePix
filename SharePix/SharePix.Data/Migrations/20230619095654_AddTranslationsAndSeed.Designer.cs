// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharePix.Data.Contexts;

#nullable disable

namespace SharePix.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230619095654_AddTranslationsAndSeed")]
    partial class AddTranslationsAndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SharePix.Data.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("SharePix.Data.Models.Friend", b =>
                {
                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int>("FriendAccountId")
                        .HasColumnType("int");

                    b.HasKey("UserAccountId", "FriendAccountId");

                    b.HasIndex("FriendAccountId");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("SharePix.Data.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("SharePix.Data.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Culture = "en-US",
                            Name = "English (United States)"
                        },
                        new
                        {
                            Id = 2,
                            Culture = "pt-PT",
                            Name = "Portuguese (Portugal)"
                        });
                });

            modelBuilder.Entity("SharePix.Data.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Location")
                        .HasMaxLength(68)
                        .HasColumnType("nvarchar(68)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("SharePix.Data.Models.PhotoPersonTag", b =>
                {
                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PhotoId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("PhotoPersonTag");
                });

            modelBuilder.Entity("SharePix.Data.Models.PhotoTextTag", b =>
                {
                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PhotoId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PhotoTextTag");
                });

            modelBuilder.Entity("SharePix.Data.Models.TextTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TextTag");
                });

            modelBuilder.Entity("SharePix.Data.Models.Translation", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translation");

                    b.HasData(
                        new
                        {
                            Key = "register.title",
                            LanguageId = 1,
                            Value = "Register"
                        },
                        new
                        {
                            Key = "login.title",
                            LanguageId = 1,
                            Value = "Login"
                        },
                        new
                        {
                            Key = "general.button.login",
                            LanguageId = 1,
                            Value = "Login"
                        },
                        new
                        {
                            Key = "general.button.create",
                            LanguageId = 1,
                            Value = "Create"
                        },
                        new
                        {
                            Key = "general.button.cancel",
                            LanguageId = 1,
                            Value = "Cancel"
                        },
                        new
                        {
                            Key = "general.button.edit",
                            LanguageId = 1,
                            Value = "Edit"
                        },
                        new
                        {
                            Key = "general.button.delete",
                            LanguageId = 1,
                            Value = "Delete"
                        },
                        new
                        {
                            Key = "general.button.save",
                            LanguageId = 1,
                            Value = "Save"
                        },
                        new
                        {
                            Key = "general.button.back",
                            LanguageId = 1,
                            Value = "Back"
                        },
                        new
                        {
                            Key = "label.firstName",
                            LanguageId = 1,
                            Value = "First Name"
                        },
                        new
                        {
                            Key = "label.lastName",
                            LanguageId = 1,
                            Value = "Last Name"
                        },
                        new
                        {
                            Key = "label.username",
                            LanguageId = 1,
                            Value = "Username"
                        },
                        new
                        {
                            Key = "label.email",
                            LanguageId = 1,
                            Value = "Email"
                        },
                        new
                        {
                            Key = "label.password",
                            LanguageId = 1,
                            Value = "Password"
                        },
                        new
                        {
                            Key = "label.confirmPassword",
                            LanguageId = 1,
                            Value = "Confirm Password"
                        },
                        new
                        {
                            Key = "label.usernameOrEmail",
                            LanguageId = 1,
                            Value = "Username Or Email"
                        },
                        new
                        {
                            Key = "register.title",
                            LanguageId = 2,
                            Value = "Registar"
                        },
                        new
                        {
                            Key = "login.title",
                            LanguageId = 2,
                            Value = "Entrar"
                        },
                        new
                        {
                            Key = "general.button.login",
                            LanguageId = 2,
                            Value = "Entrar"
                        },
                        new
                        {
                            Key = "general.button.create",
                            LanguageId = 2,
                            Value = "Criar"
                        },
                        new
                        {
                            Key = "general.button.cancel",
                            LanguageId = 2,
                            Value = "Cancelar"
                        },
                        new
                        {
                            Key = "general.button.edit",
                            LanguageId = 2,
                            Value = "Editar"
                        },
                        new
                        {
                            Key = "general.button.delete",
                            LanguageId = 2,
                            Value = "Eliminar"
                        },
                        new
                        {
                            Key = "general.button.save",
                            LanguageId = 2,
                            Value = "Salvar"
                        },
                        new
                        {
                            Key = "general.button.back",
                            LanguageId = 2,
                            Value = "Voltar"
                        },
                        new
                        {
                            Key = "label.firstName",
                            LanguageId = 2,
                            Value = "Nome"
                        },
                        new
                        {
                            Key = "label.lastName",
                            LanguageId = 2,
                            Value = "Apelido"
                        },
                        new
                        {
                            Key = "label.username",
                            LanguageId = 2,
                            Value = "Nome de Utilizador"
                        },
                        new
                        {
                            Key = "label.email",
                            LanguageId = 2,
                            Value = "Email"
                        },
                        new
                        {
                            Key = "label.password",
                            LanguageId = 2,
                            Value = "Palavra-passe"
                        },
                        new
                        {
                            Key = "label.confirmPassword",
                            LanguageId = 2,
                            Value = "Confirmar Palavra-passe"
                        },
                        new
                        {
                            Key = "label.usernameOrEmail",
                            LanguageId = 2,
                            Value = "Nome de Utilizador Ou Email"
                        });
                });

            modelBuilder.Entity("SharePix.Data.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("SharePix.Data.Models.UserGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("SharePix.Data.Models.Album", b =>
                {
                    b.HasOne("SharePix.Data.Models.UserAccount", "UserAccount")
                        .WithMany("OwnedAlbuns")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SharePix.Data.Models.Friend", b =>
                {
                    b.HasOne("SharePix.Data.Models.UserAccount", "FriendAccount")
                        .WithMany("FriendsAddedThis")
                        .HasForeignKey("FriendAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharePix.Data.Models.UserAccount", "UserAccount")
                        .WithMany("FriendsAddedByThis")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FriendAccount");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SharePix.Data.Models.Group", b =>
                {
                    b.HasOne("SharePix.Data.Models.UserAccount", "Owner")
                        .WithMany("Groups")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharePix.Data.Models.Photo", b =>
                {
                    b.HasOne("SharePix.Data.Models.Album", "Album")
                        .WithMany("PhotoAlbuns")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharePix.Data.Models.UserAccount", "UserAccount")
                        .WithMany("OwnedPhotos")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SharePix.Data.Models.PhotoPersonTag", b =>
                {
                    b.HasOne("SharePix.Data.Models.UserAccount", "Person")
                        .WithMany("PhotoPersonTags")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharePix.Data.Models.Photo", "Photo")
                        .WithMany("PersonTags")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("SharePix.Data.Models.PhotoTextTag", b =>
                {
                    b.HasOne("SharePix.Data.Models.Photo", "Photo")
                        .WithMany("TextTags")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharePix.Data.Models.TextTag", "Tag")
                        .WithMany("PhotoTextTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Photo");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("SharePix.Data.Models.Translation", b =>
                {
                    b.HasOne("SharePix.Data.Models.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SharePix.Data.Models.UserGroup", b =>
                {
                    b.HasOne("SharePix.Data.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SharePix.Data.Models.UserAccount", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharePix.Data.Models.Album", b =>
                {
                    b.Navigation("PhotoAlbuns");
                });

            modelBuilder.Entity("SharePix.Data.Models.Group", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("SharePix.Data.Models.Language", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("SharePix.Data.Models.Photo", b =>
                {
                    b.Navigation("PersonTags");

                    b.Navigation("TextTags");
                });

            modelBuilder.Entity("SharePix.Data.Models.TextTag", b =>
                {
                    b.Navigation("PhotoTextTags");
                });

            modelBuilder.Entity("SharePix.Data.Models.UserAccount", b =>
                {
                    b.Navigation("FriendsAddedByThis");

                    b.Navigation("FriendsAddedThis");

                    b.Navigation("Groups");

                    b.Navigation("OwnedAlbuns");

                    b.Navigation("OwnedPhotos");

                    b.Navigation("PhotoPersonTags");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
